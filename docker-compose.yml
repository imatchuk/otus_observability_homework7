version: '3'

networks:
  wp_network:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16

volumes:
  prometheus_data: {}
  vmdata: {}
  vmagentdata: {}
  grafana_data: {}
  esdata1: {}
  esdata2: {}
  esdata3: {}
  logs: {}

services:
  node-exporter: 
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    container_name: exporter
    hostname: exporter
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.ignored-mount-points
      - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    ports:
      - 9100:9100
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    networks:
      wp_network:
        aliases:
          - node-exporter  
        ipv4_address: 172.28.0.80 

  mysqlexporter:
    image: prom/mysqld-exporter
    container_name: mysqlexporter
    ports: 
    - "9104:9104"
    command:
     - "--mysqld.username=wordpress:rootpassword123!"
     - "--mysqld.address=database:3306"
    networks:
      wp_network:
        aliases:
          - mysqlexporter  
        ipv4_address: 172.28.0.70  

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    ports:
      - 9113
    command:
      - -nginx.scrape-uri
      - http://172.28.0.10:8080/stub_status
    depends_on:
      - prometheus
    networks:
      wp_network:
        aliases:
          - nginx-exporter  
        ipv4_address: 172.28.0.60  

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      wp_network:
        aliases:
          - prometheus  
        ipv4_address: 172.28.0.50

  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: blackbox-exporter
    volumes:
      - ./blackbox.yml:/config/blackbox.yml
    command:
      - '--config.file=/config/blackbox.yml'
    restart: unless-stopped
    ports:
      - "9115:9115"
    networks:
      wp_network:
        aliases:
          - blackbox  
        ipv4_address: 172.28.0.40
 
  victoriametrics:
    container_name: victoriametrics
    image: victoriametrics/victoria-metrics:v1.102.1
    ports:
      - 8428:8428
      - 8089:8089
      - 8089:8089/udp
      - 2003:2003
      - 2003:2003/udp
      - 4242:4242
    volumes:
      - vmdata:/storage
    restart: always  
    command:
      - "--storageDataPath=/storage"
      - "--retentionPeriod=14d"
      - "--graphiteListenAddr=:2003"
      - "--opentsdbListenAddr=:4242"
      - "--httpListenAddr=:8428"
      - "--influxListenAddr=:8089"
      - "--vmalert.proxyURL=http://vmalert:8880"
    networks:
      wp_network:
        aliases:
          - victoriametrics  
        ipv4_address: 172.28.0.51
    
  vmagent:
    container_name: vmagent
    image: victoriametrics/vmagent:v1.102.1
    depends_on:
      - "victoriametrics"
    ports:
      - 8429:8429
    volumes:
      - vmagentdata:/vmagentdata
      - ./vmprometheus.yml:/etc/prometheus/prometheus.yml
    restart: always  
    command:
      - "--promscrape.config=/etc/prometheus/prometheus.yml"
      - "--remoteWrite.url=http://victoriametrics:8428/api/v1/write"
    networks:
      wp_network:
        aliases:
          - vmagent  
        ipv4_address: 172.28.0.52

  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager:v0.27.0
    volumes:
      - ./alertmanager.yml:/config/alertmanager.yml
    restart: always
    command:
      - "--config.file=/config/alertmanager.yml"
    ports:
      - 9093:9093
    networks:
      wp_network:
        aliases:
          - alertmanager  
        ipv4_address: 172.28.0.53

  vmalert:
    container_name: vmalert
    image: victoriametrics/vmalert:v1.102.1
    depends_on:
      - "victoriametrics"
      - "alertmanager"
    ports:
      - 8880:8880
    volumes:
      - ./alerts-critical.yml:/etc/alerts/alerts-critical.yml
      - ./alerts-warning.yml:/etc/alerts/alerts-warning.yml
    restart: always    
    command:
      - "--datasource.url=http://victoriametrics:8428/"
      - "--remoteRead.url=http://victoriametrics:8428/"
      - "--remoteWrite.url=http://victoriametrics:8428/"
      - "--notifier.url=http://alertmanager:9093/"
      - "--rule=/etc/alerts/*.yml"
    networks:
      wp_network:
        aliases:
          - vmalert  
        ipv4_address: 172.28.0.54
  
  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    restart: always    
    networks:
      wp_network:
        aliases:
          - vmalert  
        ipv4_address: 172.28.0.90
      
    
    
  # Database
  database:
    image: mysql:8.0
    container_name: database
    env_file:
      - .env
    volumes:
      - ${MYSQL_LOCAL_HOME}:/var/lib/mysql
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    networks:
      wp_network:
        aliases:
          - mysql  
        ipv4_address: 172.28.0.30
    command:
      - '--default-authentication-plugin=mysql_native_password'
        
  # Wordpress
  wordpress:
    depends_on:
      - database
    image: wordpress:5-fpm
    container_name: wordpress
    env_file:
      - .env
    #ports:
    #  - '8000:9000'
    restart: unless-stopped
    volumes: 
      - ${WORDPRESS_LOCAL_HOME}:/var/www/html
      - ${WORDPRESS_UPLOADS_CONFIG}:/usr/local/etc/php/conf.d/uploads.ini
    environment:
      - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST}
      - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}
      - WORDPRESS_DB_USER=${WORDPRESS_DB_USER}
      - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}
    networks:
      wp_network:
        aliases:
          - wordpress  
        ipv4_address: 172.28.0.20

  nginx:
    image: nginx:1.23.3
    container_name: wp-nginx
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
     - wordpress
    ports:
      - "80:80"    # http
      - "443:443"   # https
    volumes:
      - ${WORDPRESS_LOCAL_HOME}:/var/www/html
      - ${NGINX_CONF}:/etc/nginx/conf.d/default.conf
      - ${NGINX_SSL_CERTS}:/etc/ssl:ro
      - ${NGINX_LOGS}:/var/log/nginx
    networks:
      wp_network:
        aliases:
          - nginx  
        ipv4_address: 172.28.0.10

  elasticsearch:
    image: elasticsearch:8.16.1
    container_name: elasticsearch1
    environment:
      - node.name=elasticsearch1
      - cluster.name=docker-cluster
      - cluster.initial_master_nodes=elasticsearch1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256M -Xmx256M"
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - network.host=_eth0_
    ulimits:
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          cpus: '1'
          memory: 256M
        reservations:
          cpus: '1'
          memory: 1G
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s
    volumes:
      - type: volume
        source: logs
        target: /var/log
      - type: volume
        source: esdata1
        target: /usr/share/elasticsearch/data
    networks:
      wp_network:
        aliases:
          - elk  
        ipv4_address: 172.28.0.11
    ports:
      - 9200:9200
      - 9300:9300

  elasticsearch2:
    image: elasticsearch:8.16.1
    container_name: elasticsearch2
    environment:
      - node.name=elasticsearch2
      - cluster.name=docker-cluster
      - cluster.initial_master_nodes=elasticsearch1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256M -Xmx256M"
      - "discovery.zen.ping.unicast.hosts=elasticsearch1"
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - network.host=_eth0_
    ulimits:
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          cpus: '1'
          memory: 256M
        reservations:
          cpus: '1'
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s
    volumes:
      - type: volume
        source: logs
        target: /var/log
      - type: volume
        source: esdata2
        target: /usr/share/elasticsearch/data
    networks:
      wp_network:
        aliases:
          - elk2  
        ipv4_address: 172.28.0.12
    ports:
      - 9201:9200
  elasticsearch3:
    image: elasticsearch:8.16.1
    container_name: elasticsearch3
    environment:
      - node.name=elasticsearch3
      - cluster.name=docker-cluster
      - cluster.initial_master_nodes=elasticsearch1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256M -Xmx256M"
      - "discovery.zen.ping.unicast.hosts=elasticsearch1"
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - network.host=_eth0_
    ulimits:
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          cpus: '1'
          memory: 256M
        reservations:
          cpus: '1'
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s
    volumes:
      - type: volume
        source: logs
        target: /var/log
      - type: volume
        source: esdata3
        target: /usr/share/elasticsearch/data
    networks:
      wp_network:
        aliases:
          - elk3  
        ipv4_address: 172.28.0.13
    ports:
      - 9202:9200

  kibana:
    image: kibana:8.16.1
    container_name: kibana
    environment:
      SERVER_NAME: localhost
      ELASTICSEARCH_URL: http://elasticsearch1:9200/
    ports:
      - 5601:5601
    volumes:
      - type: volume
        source: logs
        target: /var/log
    ulimits:
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          cpus: '1'
          memory: 256M
        reservations:
          cpus: '1'
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
        window: 120s
    networks:
      wp_network:
        aliases:
          - kibana  
        ipv4_address: 172.28.0.14

  metricbeat:
    image: elastic/metricbeat/metricbeat:8.16.1
    # command: --strict.perms=false
    environment:
      - setup.kibana.host=kibana:5601
      - output.elasticsearch.hosts=["elasticsearch:9200"]
    cap_add:
      - AUDIT_CONTROL
      - AUDIT_READ
    volumes:
      - ./config/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /proc:/hostfs/proc:ro
      - /:/hostfs:ro
    networks:
      wp_network:
        aliases:
          - metricbeat
        ipv4_address: 172.28.0.15
      
  heartbeat:
    image: elastic/heartbeat:8.16.1
    command: --strict.perms=false
    environment:
      - setup.kibana.host=kibana:5601
      - output.elasticsearch.hosts=["elasticsearch:9200"]
    volumes:
      - ./config/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml
    networks:
      wp_network:
        aliases:
          - heartbeat
        ipv4_address: 172.28.0.16
      
  filebeat:
    image: elastic/filebeat:8.16.1
    command: --strict.perms=false
    environment:
      - setup.kibana.host=kibana:5601
      - output.elasticsearch.hosts=["elasticsearch:9200"]
    ports:
      - 9000:9000
    volumes:
        - ./config/filebeat.yml:/usr/share/filebeat/filebeat.yml
        - /var/lib/docker/containers:/var/lib/docker/containers:ro
        - /var/run/docker.sock:/var/run/docker.sock
    networks:
      wp_network:
        aliases:
          - filebeat
        ipv4_address: 172.28.0.17